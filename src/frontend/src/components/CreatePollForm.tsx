import React, { useState } from "react";

const CreatePollForm: React.FC = () => {
  const [question, setQuestion] = useState("");
  const [options, setOptions] = useState<string[]>(["", ""]);
  const [duration, setDuration] = useState(600); // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (10 –º–∏–Ω)
  const [status, setStatus] = useState<string | null>(null);

  const handleOptionChange = (index: number, value: string) => {
    const updated = [...options];
    updated[index] = value;
    setOptions(updated);
  };

  const addOption = () => {
    setOptions([...options, ""]);
  };

  const removeOption = (index: number) => {
    if (options.length <= 2) return;
    const updated = options.filter((_, i) => i !== index);
    setOptions(updated);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setStatus("‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–∞...");

    try {
      const res = await fetch(`${import.meta.env.VITE_BACKEND_API_URL}/create-poll`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          question,
          options,
          duration,
        }),
      });

      const data = await res.json();

      if (!res.ok) {
        setStatus(`‚ùå –û—à–∏–±–∫–∞: ${data.detail || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`);
        return;
      }

      setStatus(`‚úÖ –û–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω! Tx Hash: ${data.tx_hash}`);
      setQuestion("");
      setOptions(["", ""]);
      setDuration(600);
    } catch (err) {
      console.error(err);
      setStatus("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞");
    }
  };

  return (
    <form onSubmit={handleSubmit} style={{ marginTop: "2rem", padding: "1rem", border: "1px solid #ccc" }}>
      <h2>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ–ø—Ä–æ—Å</h2>

      <label>üìù –í–æ–ø—Ä–æ—Å:</label>
      <input value={question} onChange={(e) => setQuestion(e.target.value)} required />

      <label>üßæ –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:</label>
      {options.map((opt, index) => (
        <div key={index} style={{ display: "flex", gap: "0.5rem" }}>
          <input
            value={opt}
            onChange={(e) => handleOptionChange(index, e.target.value)}
            required
          />
          {options.length > 2 && (
            <button type="button" onClick={() => removeOption(index)}>x</button>
          )}
        </div>
      ))}

      <button type="button" onClick={addOption} style={{ marginTop: "0.5rem" }}>
        ‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç
      </button>

      <label style={{ marginTop: "1rem" }}>‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö):</label>
      <input
        type="number"
        value={duration}
        onChange={(e) => setDuration(Number(e.target.value))}
        required
        min={1}
      />

      <button type="submit" style={{ marginTop: "1rem" }}>
        üöÄ –°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å
      </button>

      {status && <p style={{ marginTop: "1rem" }}>{status}</p>}
    </form>
  );
};

export default CreatePollForm;