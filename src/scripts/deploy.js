const { ethers } = require("hardhat");
const fs = require("fs");
const path = require("path");

async function main() {
  const [deployer] = await ethers.getSigners();
  console.log(`👤 Deployer: ${deployer.address}`);
  const balance = await deployer.getBalance();
  console.log(`💰 Balance: ${ethers.utils.formatEther(balance)} ETH`);

  console.log("📦 Deploying PollToken...");
  const PollToken = await ethers.getContractFactory("PollToken");
  const token = await PollToken.deploy();
  await token.deployed();
  console.log(`✅ PollToken deployed at: ${token.address}`);

  console.log("🗳️ Deploying PollSystem...");
  const PollSystem = await ethers.getContractFactory("PollSystem");
  const pollSystem = await PollSystem.deploy(token.address, deployer.address);
  await pollSystem.deployed();
  console.log(`✅ PollSystem deployed at: ${pollSystem.address}`);

  // Выдаём системе токены для выплат
  const giveTokensToSystem = await token.transfer(pollSystem.address, ethers.utils.parseEther("1000"));
  await giveTokensToSystem.wait();
  console.log("💰 PollSystem получил 1000 POLL на выплаты");

  const outputDir = path.join(__dirname, "../deployments");
  fs.mkdirSync(outputDir, { recursive: true });

  const deploymentData = {
    pollTokenAddress: token.address,
    pollSystemAddress: pollSystem.address,
    relayer: deployer.address,
    network: network.name,
    timestamp: new Date().toISOString()
  };

  fs.writeFileSync(
    path.join(outputDir, "deploy.json"),
    JSON.stringify(deploymentData, null, 2)
  );

  const pollTokenArtifact = await artifacts.readArtifact("PollToken");
  const pollSystemArtifact = await artifacts.readArtifact("PollSystem");

  fs.writeFileSync(
    path.join(outputDir, "poll_token_abi.json"),
    JSON.stringify(pollTokenArtifact.abi, null, 2)
  );

  fs.writeFileSync(
    path.join(outputDir, "poll_system_abi.json"),
    JSON.stringify(pollSystemArtifact.abi, null, 2)
  );

  const envContent = `# Auto-generated by deploy.js
RPC_URL=http://127.0.0.1:8545
PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
CONTRACT_ADDRESS=${pollSystem.address}
POLL_TOKEN_ADDRESS=${token.address}
`;

  const envPath = path.join(__dirname, "../backend/.env"); // если backend лежит рядом
  fs.writeFileSync(envPath, envContent);

  console.log("✅ Deployment complete! Files are written.");
}

main().catch((error) => {
  console.error("❌ Deployment failed:", error);
  process.exitCode = 1;
});